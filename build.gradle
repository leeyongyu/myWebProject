plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'myWebProject'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//JQuery, BootStrap
	implementation group: 'org.webjars', name: 'jquery', version: '3.6.0'
	implementation group: 'org.webjars', name: 'bootstrap', version: '4.6.0'

	// tiles
	implementation 'org.apache.tiles:tiles-jsp:3.0.8'
	implementation 'org.apache.tiles:tiles-core:3.0.8'
	implementation 'org.apache.tiles:tiles-servlet:3.0.8'
	// JSP를 처리해주는 Servlet
	implementation 'javax.servlet:jstl'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

	// QueryDSL 라이브러리
	implementation 'com.querydsl:querydsl-core'
	// QueryDSL JPA 라이브러리
	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	//DEV 모드
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
def querydslSrcDir = 'src/main/generated'
sourceSets {
	main {
		java {
			srcDirs += [ querydslSrcDir ]
		}
	}
}
compileJava {
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

clean {
	delete file(querydslSrcDir)
}

tasks.named('test') {
	useJUnitPlatform()
}
